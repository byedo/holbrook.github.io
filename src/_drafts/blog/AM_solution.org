#+TITLE: 下一代系统应用监控(AM)方案

* 需求

根据海英总的要求，我定期参加系统运行部的工作会议，了解运行部门对于系统的意见和要求，并反馈到研发团队。

在最近的两次会议中，朝晖总提出对于应用系统运行方面的要求：

- 应用系统能够自动识别所需资源的状态，在资源状态异常时能够自动重试连接。比如，数据库连接是否断开，NFS服务是否断开等
- 当应用系统经过重试确认资源不可用时，应该能够发出报警
- 对于具备冗余部署的应用，如果单个节点确认资源不可用，应该实现自我隔离：停止自身的服务，从而使其他的冗余节点能够自动接管服务
- 这些自我监控、自我修复、自我隔离的功能，应该纳入应用系统的开发，成为应用系统的一部分
- 应用系统应该提供黑盒测试的机制，明确给出验证系统的服务是否正常的方法

* 分析

从运维的角度来说，这是典型的应用监控(AM, Application Monitoring)领域的问题。即：

#+BEGIN_QUOTE

    对应用系统及其所依赖的IT基础架构的状态和行为进行监测、加工和分析，从而对应用系统的可用性、稳定性、安全性、性能和资源利用情况这五个方面的健康状况作出判断、告警和干预。

#+END_QUOTE

与系统监控相比，应用监控不仅要监控各IT基础设施（如服务器、网络设备、基础软件等），更要从应用的角度，将应用系统所依赖的各种资源与应用系统自身作为一个整体，
并根据应用提供的服务内容，定义出应用自身的状态指标及其监测方法。

[[./assets/images//254857bA.png]]

解决了依赖关系，则应用系统与其他资源的监控机制没有本质的区别，主要包括：

- 定义应用系统的指标（如性能指标，可用性指标，容量指标等）
- 应用系统实现上述指标的提供或获取机制
- 定义判断应用系统状态的策略（根据应用系统自身，以及应用系统依赖各资源的指标，判断当前应用系统的状态，如正常，警告，不可用等）
- 定义操作策略（如邮件通知、短信通知等，可以使用工具和脚本实现自动通知，甚至自动维护）

* 实现方式

通过上述对问题的抽象，应用监控可以不集成在应用系统之内，只通过应用系统之外、第三方的平台进行实现。当然，需要应用系统配合，开发相应的获取指标的脚本，以及自动维护的脚本。

经过与董鑫交流，我们认为[[http://www.zabbix.com/][zabbix]] 能够满足上述的需求。zabbix是一款开源的分布式监控平台，安装部署比较简单，具备很强的开放性。完全支持自定义的脚本进行指标的获取或执行运维操作。


* 计划

现计划在下一代项目中，集成zabbix作为统一的监控平台，统一制定应用监控的指标体系标准。各应用系统配合进行相关脚本或工具的开发，使得下一代的各个应用系统能够满足运行部门的要求。

目前能想到的需要进行的工作包括：

- 定义应用监控的指标体系标准：建议由系统运行部的相关人员提出，作为下一代各应用系统的监控需求
- 监控体系的整体设计：建议由董鑫负责
- 部署、配置zabbix，指导相关脚本的开发：建议由董鑫负责
- 按照整体监控指标体系标准，开发各应用系统的指标获取及自动运维脚本：由交易研发人员及开发商共同完成
