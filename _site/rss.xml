<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>心内求法</title>
        <description>心内求法 - Holbrook Wong</description>
        <link>http://holbrook.github.io</link>
        <link>http://holbrook.github.io</link>
        <lastBuildDate>2013-05-23T13:46:41+08:00</lastBuildDate>
        <pubDate>2013-05-23T13:46:41+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>重拾vim</title>
                <description>&lt;p&gt;以前在&lt;a title='心内求法' href='http://www.cnblogs.com/holbrook/'&gt;博客园&lt;/a&gt;时，用&lt;a title='Emacs学习笔记(9' href='http://www.cnblogs.com/holbrook/archive/2012/04/12/2444992.html'&gt;emacs org-mode&lt;/a&gt; 写博客，并且写了一系列&lt;a title='emacs 学习笔记' href='http://www.cnblogs.com/holbrook/tag/emacs/'&gt;《emacs 学习笔记》&lt;/a&gt;。 emacs 和 org-mode 的强大毋庸置疑，但是经过1年多的使用，还是有些不适应： 1. 小手指很受伤。 2. 过于依赖配置。 由于我的工作要经常登录到linux服务器进行操作，这就带来了一个问题： 服务器上的emacs在不配置的情况下几乎无法使用，但是在服务器上使用vim，又不符合手指中记忆的快捷键。&lt;/p&gt;

&lt;p&gt;经过艰难的取舍，还是决定在个人工作领域也回到vim。保护手指，保护大脑。&lt;/p&gt;

&lt;h2 id='vundle'&gt;&lt;em&gt;插件管理器(Vundle)&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;重新关注vim后，首先发现了一系列插件管理器。主要有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='https://github.com/gmarik/vundle'&gt;Vundle&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.vim.org/scripts/script.php?script_id=2905'&gt;vim-addon-manager&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.vim.org/scripts/script.php?script_id=2332'&gt;pathogen.vim&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.vim.org/scripts/script.php?script_id=3458'&gt;vvundle&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='https://github.com/c9s/Vimana'&gt;vvimana&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;经过简单的比较，我选择了Vundle。这里不想对上述插件管理器做一个完整的对比，只是简单说一个我看中的Vundle的特点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;只需要维护需要的插件列表就可以统一安装，同样，复制环境时也只需要复制一个文件(.vimrc)&lt;/li&gt;

&lt;li&gt;支持git更新 3. 支持插件搜索功能 4. 自动管理插件依赖关系&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;安装Vundle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;安装Vundle只需要一条命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;配置插件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在.vimrc中配置需要的插件，作者给出了一个例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set nocompatible               &amp;quot; be iMproved
filetype off                   &amp;quot; required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
&amp;quot; let Vundle manage Vundle
&amp;quot; required! 
Bundle &amp;#39;gmarik/vundle&amp;#39;
&amp;quot; My Bundles here:
&amp;quot;
&amp;quot; original repos on github
Bundle &amp;#39;tpope/vim-fugitive&amp;#39;
Bundle &amp;#39;Lokaltog/vim-easymotion&amp;#39;
Bundle &amp;#39;rstacruz/sparkup&amp;#39;, {&amp;#39;rtp&amp;#39;: &amp;#39;vim/&amp;#39;}
Bundle &amp;#39;tpope/vim-rails.git&amp;#39;
&amp;quot; vim-scripts repos
Bundle &amp;#39;L9&amp;#39;
Bundle &amp;#39;FuzzyFinder&amp;#39;
&amp;quot; non github repos
Bundle &amp;#39;git://git.wincent.com/command-t.git&amp;#39;
&amp;quot; ...
filetype plugin indent on     &amp;quot; required!
&amp;quot;
&amp;quot; Brief help
&amp;quot; :BundleList          - list configured bundles
&amp;quot; :BundleInstall(!)    - install(update) bundles
&amp;quot; :BundleSearch(!) foo - search(or refresh cache first) for foo
&amp;quot; :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
&amp;quot;
&amp;quot; see :h vundle for more details or wiki for FAQ
&amp;quot; NOTE: comments after Bundle command are not allowed..&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;安装插件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;只需要在启动vim后，运行命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:BundleInstall&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vbundle就会自动安装或更新前面配置好的插件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;其他操作&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用帮助：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:h vundle&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看插件清单：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:BundleList&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜索插件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:BundleSearch markdown&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;清理不用的插件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:BundleClean
#或者
:BundleClean markdown&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='id26'&gt;&lt;em&gt;必备插件&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;下面是我使用的一些vim插件，直接在.vimrc中配置：&lt;/p&gt;</description>
                <link>http://holbrook.github.io/%E5%99%A8.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/2013/05/23/vim-addon-manager</link>
                <guid>http://holbrook.github.io/%E5%99%A8.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/2013/05/23/vim-addon-manager</guid>
                <pubDate>2013-05-23T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>markdown的主要语法</title>
                <description>&lt;h1 id='id1'&gt;标题&lt;/h1&gt;

&lt;h1 id='id2'&gt;一级标题&lt;/h1&gt;

&lt;h2 id='id3'&gt;二级标题&lt;/h2&gt;

&lt;h3 id='id4'&gt;三级标题&lt;/h3&gt;

&lt;h4 id='id5'&gt;四级标题&lt;/h4&gt;

&lt;h5 id='id6'&gt;五级标题&lt;/h5&gt;

&lt;h6 id='id7'&gt;六级标题&lt;/h6&gt;

&lt;p&gt;注解 标题后面可接匹配的井号。 Markdown的前两级标题还可以使用reST风格，即在标题下衬以等号或减号组成的下划线。&lt;/p&gt;

&lt;h1 id='id8'&gt;一级标题&lt;/h1&gt;

&lt;h2 id='id9'&gt;二级标题&lt;/h2&gt;

&lt;h1 id='id10'&gt;段落&lt;/h1&gt;

&lt;h2 id='id11'&gt;空行分段&lt;/h2&gt;

&lt;p&gt;第一段内容。&lt;/p&gt;

&lt;p&gt;第二段和第一段间有一空行。&lt;/p&gt;

&lt;h2 id='id12'&gt;自动续行&lt;/h2&gt;

&lt;p&gt;一个回车不分段， 本行续上行。&lt;/p&gt;

&lt;h2 id='id13'&gt;插入换行&lt;/h2&gt;

&lt;p&gt;行尾两空格°° 保持换行。&lt;/p&gt;

&lt;p&gt;GFM、Textile等 保持段落内换行符。&lt;/p&gt;

&lt;h2 id='id14'&gt;段落缩进&lt;/h2&gt;

&lt;p&gt;邮件体段落缩进：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;第一级段落缩进。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;第二级段落缩进。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;返回一级段落缩进。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id='id15'&gt;代码块&lt;/h1&gt;

&lt;p&gt;四个空格缩进是代码块：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ printf &amp;quot;Hello, world.\n&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gfm：&lt;/p&gt;

&lt;p&gt;三个连续的&lt;code&gt;或~等符号界定代码块。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ruby
require &amp;#39;redcarpet&amp;#39;
md = Redcarpet.new(&amp;quot;Hello, world.&amp;quot;)
puts md.to_html
&lt;/code&gt;&lt;/p&gt;

&lt;h1 id='id16'&gt;列表&lt;/h1&gt;

&lt;h2 id='id17'&gt;无序列表&lt;/h2&gt;

&lt;p&gt;* 星号、减号、加号开始列表。&lt;/p&gt;

&lt;p&gt;- 列表层级和缩进有关。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ 和具体符号无关。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;* 返回一级列表。&lt;/p&gt;

&lt;h2 id='id18'&gt;有序列表&lt;/h2&gt;

&lt;p&gt;1. 数字和点开始有序列表。&lt;/p&gt;

&lt;p&gt;1. 注意子列表的缩进位置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  1. 三级列表。
  1. 编号会自动更正。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1. 二级列表，编号自动更正为2。&lt;/p&gt;

&lt;p&gt;2. 返回一级列表。&lt;/p&gt;

&lt;h2 id='id19'&gt;列表续行、段落和代码块&lt;/h2&gt;

&lt;p&gt;1. 列表项可以折行， 对齐则自动续行。&lt;/p&gt;

&lt;p&gt;2. 列表项可包含多个段落。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;空行开始的新段落必须缩进四个空格，
段落才属于列表项。&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;列表中的代码块要缩进8个空格。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ printf &amp;quot;Hello, world.\n&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id='id20'&gt;分隔线&lt;/h1&gt;

&lt;p&gt;三条或更多短线（或星号、下划线）\ 显示为分隔线。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id='id21'&gt;字体&lt;/h1&gt;

&lt;p&gt;这些都是 &lt;strong&gt;粗体&lt;/strong&gt; 或 &lt;strong&gt;粗体&lt;/strong&gt; ， 这写都是 &lt;em&gt;斜体&lt;/em&gt; 或 &lt;em&gt;斜体&lt;/em&gt; 。&lt;/p&gt;

&lt;p&gt;~~删除线~~ 效果&lt;/p&gt;
&lt;u&gt;下划线&lt;/u&gt;
&lt;p&gt;上标下标：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Water: H&lt;sub&gt;2&lt;/sub&gt;O&lt;/li&gt;

&lt;li&gt;E = mc&lt;sup&gt;2&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等宽字体： 行内反引号嵌入代码，如: &lt;code&gt;git status&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;引言：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Got GitHub&lt;/code&gt; by Jiang Xin.&lt;/p&gt;

&lt;p&gt;清除标记空白：&lt;/p&gt;

&lt;p&gt;标记符号前后空白\ 用\ &lt;strong&gt;反斜线&lt;/strong&gt;\ 消除&lt;/p&gt;

&lt;h1 id='id22'&gt;链接&lt;/h1&gt;

&lt;p&gt;文字链接&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;a title='Search' href='http://google.com'&gt;Google&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;访问 &lt;a title='Git host' href='http://github.com'&gt;GitHub&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;访问 &lt;a href='http://www.worldhello.net'&gt;WorldHello&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内部跳转&lt;/p&gt;
&lt;a name='md-anchor' id='md-anchor' /&gt;
&lt;p&gt;跳转至 &lt;a href='#md-anchor'&gt;文内链接&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;GitHub提交和问题链接 gfm&lt;/p&gt;

&lt;p&gt;指向同一提交的链接：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提交ID（SHA）: cea00609ca8&amp;#8230;&lt;/li&gt;

&lt;li&gt;用户@提交ID: mojombo@cea00609ca8&amp;#8230;&lt;/li&gt;

&lt;li&gt;用户名/项目名@提交ID: mojombo/god@cea00609ca8&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;指向同一Issue的链接：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Issue编号: #1&lt;/li&gt;

&lt;li&gt;用户名及Issue编号: mojombo#1&lt;/li&gt;

&lt;li&gt;用户名/项目名及Issue编号: mojombo/god#1&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id='id23'&gt;图片&lt;/h1&gt;

&lt;p&gt;&lt;img alt='GitHub' src='/images/github.png' /&gt;&lt;/p&gt;

&lt;p&gt;GitHub Logo: &lt;img alt='GitHub' src='/images/github.png' /&gt;&lt;/p&gt;

&lt;h1 id='id24'&gt;表格&lt;/h1&gt;

&lt;p&gt;gfm&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;head1&lt;/th&gt;&lt;th&gt;head2&lt;/th&gt;&lt;th&gt;head2&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style='text-align: left;'&gt;left&lt;/td&gt;&lt;td style='text-align: center;'&gt;center&lt;/td&gt;&lt;td style='text-align: right;'&gt;right&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td style='text-align: left;'&gt;left&lt;/td&gt;&lt;td style='text-align: center;'&gt;center&lt;/td&gt;&lt;td style='text-align: right;'&gt;right&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h1 id='html'&gt;混用HTML&lt;/h1&gt;
&lt;div style='background:#bbb;'&gt;
  HTML块中不能混用 **标记语法**
&lt;/div&gt;</description>
                <link>http://holbrook.github.io/2013/05/22/markdown</link>
                <guid>http://holbrook.github.io/2013/05/22/markdown</guid>
                <pubDate>2013-05-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>New Post</title>
                <description>&lt;p&gt;layout: post title: &amp;#8220;new post&amp;#8221; description: &amp;#8221;&amp;#8221; category:&lt;/p&gt;

&lt;h2 id='tags_'&gt;tags: &lt;span /&gt;&lt;/h2&gt;</description>
                <link>http://holbrook.github.io/2012/12/21/new-post</link>
                <guid>http://holbrook.github.io/2012/12/21/new-post</guid>
                <pubDate>2012-12-21T00:00:00+08:00</pubDate>
        </item>


</channel>
</rss>
